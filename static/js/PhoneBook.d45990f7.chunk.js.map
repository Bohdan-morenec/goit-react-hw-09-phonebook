{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","component/FormContact/FormContact.module.scss","component/ContactsFilter/ContactsFilter.module.scss","component/ContactList/ContactList.module.scss","Route/PhoneBook.module.scss","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","component/FormContact/FormContact.js","redux/contacts/contact-operations.js","component/ContactsFilter/ContactsFilter.js","component/ContactList/ContactList.js","Route/PhoneBook.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","toLowerCase","v4","options","buf","rnds","random","FormContact","useState","nameUser","setName","numberUser","setNuber","dispatch","useDispatch","contactsItems","useSelector","getContacts","addСontact","a","addContactRequest","axios","post","data","addСontactSuccess","aadContactError","message","actions","addFormContact","e","currentTarget","name","console","log","className","styles","transparent","htmlFor","uuidv4","onSubmit","preventDefault","find","number","alert","id","formInner","onChange","type","pattern","title","required","button","ContactsFilter","filter","getFilter","lable","tupe","ContactList","filteredContact","filteredArrayContact","deleteContact","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","useEffect","fetchContactRequest","get","fetchСontactSuccess","fetchContactError","style","list","map","listItem","onClick","PhoneBook","box"],"mappings":"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","file":"static/js/PhoneBook.d45990f7.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"FormContact_transparent__PNwbY\",\"formInner\":\"FormContact_formInner__PrA2b\",\"button\":\"FormContact_button__SW-D4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"ContactsFilter_lable__2hpKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2o-LF\",\"listItem\":\"ContactList_listItem__2CjXU\",\"button\":\"ContactList_button__QUZEm\",\"name\":\"ContactList_name__2Ib1-\",\"number\":\"ContactList_number__15wbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"PhoneBook_box___V8Rm\",\"title\":\"PhoneBook_title__mNQt4\",\"preloader\":\"PhoneBook_preloader__EzUU1\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from \"uuid\";\r\n// import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/contacts/contact-operations\";\r\nimport { getContacts } from \"../../redux/contacts/contact-selectors\";\r\n\r\nimport styles from \"./FormContact.module.scss\";\r\n\r\nconst FormContact = () => {\r\n  const [nameUser, setName] = useState(\"\");\r\n  const [numberUser, setNuber] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const contactsItems = useSelector(getContacts);\r\n\r\n  const addСontact = (value) => dispatch(actions.addСontact(value));\r\n\r\n  const addFormContact = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNuber(value);\r\n        break;\r\n\r\n      default:\r\n        console.log(\"error\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  const dominicToretto = () => {\r\n    return contactsItems.find(({ name, number }) => {\r\n      return name === nameUser || number === numberUser;\r\n    });\r\n  };\r\n\r\n  const SubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (dominicToretto()) {\r\n      return alert(\"the same name or phone number already exists\");\r\n    }\r\n\r\n    addСontact({\r\n      name: nameUser,\r\n      number: numberUser,\r\n      id: uuidv4(),\r\n    });\r\n\r\n    setName(\"\");\r\n    setNuber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={styles.transparent}\r\n      htmlFor={uuidv4()}\r\n      onSubmit={SubmitForm}\r\n    >\r\n      <div className={styles.formInner}>\r\n        <label>\r\n          Name\r\n          <input\r\n            onChange={addFormContact}\r\n            type=\"text\"\r\n            value={nameUser}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            onChange={addFormContact}\r\n            type=\"tel\"\r\n            value={numberUser}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          aad contact\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n// FormContact.propTypes = {\r\n//   contactsItems: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//     })\r\n//   ),\r\n// };\r\n// Function.defaultProps = {\r\n//   contacts: [],\r\n// };\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contactsItems: getContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   addСontact: (value) => dispatch(actions.addСontact(value)),\r\n// });\r\n\r\nexport default FormContact;\r\n","import {\r\n  addContactRequest,\r\n  addСontactSuccess,\r\n  aadContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchСontactSuccess,\r\n  fetchContactError,\r\n} from \"./contacts-actions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const addСontact = (value) => async (dispatch) => {\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", value);\r\n\r\n    dispatch(addСontactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(aadContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchContact = () => async (dispatch) => {\r\n  dispatch(fetchContactRequest);\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n\r\n    dispatch(fetchСontactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error.message));\r\n  }\r\n};\r\n","// import PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contact-selectors\";\r\n\r\nimport styles from \"./ContactsFilter.module.scss\";\r\n\r\nconst ContactsFilter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const filter = useSelector(getFilter);\r\n\r\n  const filterContactState = (e) =>\r\n    dispatch(actions.filterContact(e.currentTarget.value));\r\n\r\n  return (\r\n    <input\r\n      className={styles.lable}\r\n      onChange={filterContactState}\r\n      value={filter}\r\n      tupe=\"text\"\r\n      name=\"filter\"\r\n      title=\"Поиск контактов\"\r\n    />\r\n  );\r\n};\r\n\r\n// ContactsFilter.propTypes = {\r\n//   filterContactState: PropTypes.func.isRequired,\r\n//   filter: PropTypes.string.isRequired,\r\n// };\r\n\r\nexport default ContactsFilter;\r\n","// import PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/contacts/contact-operations\";\r\nimport { filteredArrayContact } from \"../../redux/contacts/contact-selectors\";\r\n\r\nimport style from \"./ContactList.module.scss\";\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const filteredContact = useSelector(filteredArrayContact);\r\n\r\n  const deleteContact = (id) => dispatch(actions.deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    const fetchContact = () => dispatch(actions.fetchContact());\r\n\r\n    fetchContact();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={style.list}>\r\n      {filteredContact.map(({ name, number, id }) => (\r\n        <li className={style.listItem} key={id}>\r\n          <p className={style.name}>\r\n            {name}: <span className={style.number}>{number}</span>\r\n          </p>\r\n          <button\r\n            className={style.button}\r\n            type=\"button\"\r\n            onClick={() => deleteContact(id)}\r\n          >\r\n            Удалить\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// ContactList.propTypes = {\r\n//   deleteContact: PropTypes.func.isRequired,\r\n//   filteredArrayContact: PropTypes.array.isRequired,\r\n// };\r\n\r\nexport default ContactList;\r\n","import FormContact from \"../component/FormContact\";\r\nimport ContactsFilter from \"../component/ContactsFilter\";\r\nimport ContactList from \"../component/ContactList\";\r\n\r\nimport styles from \"./PhoneBook.module.scss\";\r\n\r\nconst PhoneBook = () => {\r\n  return (\r\n    <div className={styles.box}>\r\n      <h1 className={styles.title}>Phonebook</h1>\r\n      <FormContact />\r\n      <div>\r\n        <h2 className={styles.title}>contacts</h2>\r\n        <ContactsFilter />\r\n        <ContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhoneBook;\r\n"],"sourceRoot":""}